name: Build and publish dist (Hostinger via FTP)

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Instala dependências
      - name: Install deps (npm/yarn/pnpm)
        run: |
          set -e
          if [ -f pnpm-lock.yaml ]; then
            echo "Using pnpm"
            corepack enable
            pnpm install --frozen-lockfile
            echo "BUILD_CMD=pnpm run build" >> $GITHUB_ENV
          elif [ -f yarn.lock ]; then
            echo "Using yarn"
            corepack enable
            yarn install --frozen-lockfile
            echo "BUILD_CMD=yarn build" >> $GITHUB_ENV
          else
            echo "Using npm"
            (npm ci || npm install)
            echo "BUILD_CMD=npm run build" >> $GITHUB_ENV
          fi

      - name: Build
        run: |
          echo "Running: $BUILD_CMD"
          eval "$BUILD_CMD"

      # Reorganiza saída para layout da Hostinger
      - name: Reshape dist to Hostinger layout
        run: |
          set -e
          mkdir -p dist/assets dist/images dist/src/content/posts

          # Move css/js/map para dist/assets
          find dist -maxdepth 2 -type f \( -name "*.css" -o -name "*.js" -o -name "*.map" \) -not -path "dist/assets/*" -exec mv -f {} dist/assets/ \; || true

          # Copia arquivos de public (exceto index.html)
          if [ -d public ]; then
            shopt -s nullglob
            for f in public/*; do
              if [ -f "$f" ] && [ "$(basename "$f")" != "index.html" ]; then
                cp -f "$f" dist/
              fi
            done
            shopt -u nullglob
          fi

          # Imagens → dist/images
          if [ -d public/images ]; then
            cp -R public/images/* dist/images/ 2>/dev/null || true
          fi
          if [ -d images ]; then
            cp -R images/* dist/images/ 2>/dev/null || true
          fi

          # MDX posts
          if [ -d src/content/posts ]; then
            cp -R src/content/posts/* dist/src/content/posts/ 2>/dev/null || true
          fi

          # .htaccess
          if [ -f .htaccess ]; then
            cp -f .htaccess dist/.htaccess
          elif [ -f config/.htaccess ]; then
            cp -f config/.htaccess dist/.htaccess
          else
            echo "WARNING: .htaccess não encontrado"
          fi

          # Landing pages auxiliares → lp
          if [ -d auxiliares ]; then
            rm -rf dist/lp
            cp -R auxiliares dist/lp
          fi

      # Cria arquivo version.txt
      - name: Write version file
        run: |
          echo "commit: $GITHUB_SHA" > dist/version.txt
          echo "date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> dist/version.txt

      # Debug: listar dist
      - name: Debug dist contents
        run: |
          echo "Conteúdo de dist/"
          ls -R dist

      # Deploy via FTP incremental
      - name: Deploy to Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          protocol: ftp
          port: 21
          local-dir: ./dist/
          server-dir: /
          exclude: |
            **/.git*
            **/node_modules/**
